<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:repository="http://www.springframework.org/schema/data/repository"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/data/jpa
       	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       	http://www.springframework.org/schema/data/repository
       	http://www.springframework.org/schema/data/repository/spring-repository.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       	http://www.springframework.org/schema/util
	    http://www.springframework.org/schema/util/spring-util.xsd
       	http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="com.tfk.commons.spring.SpringContextUtil"></bean>
    <bean id="SpringMvcExceptionResolver" class="com.tfk.commons.spring.SpringMvcExceptionResolver"/>

    <!-- freemarker -->
    <bean id="freemarkerConfiguration"   class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties" />
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="classpath:META-INF/ftl" />
        <property name="freemarkerSettings" ref="freemarkerConfiguration" />
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
            </map>
        </property>
    </bean>
    <bean id="staticsConfiguration" class="org.apache.commons.configuration.PropertiesConfiguration">
        <constructor-arg value="freemarkerStatics.properties"></constructor-arg>
    </bean>
    <bean id="freemarkerStaticModels" class="com.tfk.boot.config.FreemarkerStaticModels">
        <constructor-arg index="0" ref="staticsConfiguration"></constructor-arg>
    </bean>
    <bean id="freeMarkerViewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="" />
        <property name="suffix" value=".ftl" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="allowRequestOverride" value="true" />
        <property name="allowSessionOverride" value="true" />
        <property name="requestContextAttribute" value="request" />
        <property name="attributesMap" ref="freemarkerStaticModels"></property>
    </bean>
    <!-- freemarker -->

    <util:properties id="bootConfig" location="classpath*:META-INF/spring/bootConfig.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="100" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg index="0">
            <ref bean="dataSource" />
        </constructor-arg>
    </bean>
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
        </property>
        <!--<property name="persistenceUnitRootLocation"  value="classpath*:/hbm"></property>-->
        <property name="mappingResources" >
            <list>
                <value>hbm/School.hbm.xml</value>
                <value>hbm/Clazz.hbm.xml</value>
                <value>hbm/Teacher.hbm.xml</value>
                <value>hbm/Student.hbm.xml</value>
                <value>hbm/Assess.hbm.xml</value>
                <value>hbm/Assessee.hbm.xml</value>
                <value>hbm/Assessor.hbm.xml</value>
                <value>hbm/Index.hbm.xml</value>
                <value>hbm/Award.hbm.xml</value>
                <value>hbm/Medal.hbm.xml</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <!-- 生成的数据表的列的映射策略 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!-- hibernate 基本属性 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
            </props>
        </property>
    </bean>

    <!-- 3. 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 4. 配置支持注解的事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>
